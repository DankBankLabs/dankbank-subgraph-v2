// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuctionTemplateAdded extends ethereum.Event {
  get params(): AuctionTemplateAdded__Params {
    return new AuctionTemplateAdded__Params(this);
  }
}

export class AuctionTemplateAdded__Params {
  _event: AuctionTemplateAdded;

  constructor(event: AuctionTemplateAdded) {
    this._event = event;
  }

  get newAuction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get templateId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AuctionTemplateRemoved extends ethereum.Event {
  get params(): AuctionTemplateRemoved__Params {
    return new AuctionTemplateRemoved__Params(this);
  }
}

export class AuctionTemplateRemoved__Params {
  _event: AuctionTemplateRemoved;

  constructor(event: AuctionTemplateRemoved) {
    this._event = event;
  }

  get auction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get templateId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MarketCreated extends ethereum.Event {
  get params(): MarketCreated__Params {
    return new MarketCreated__Params(this);
  }
}

export class MarketCreated__Params {
  _event: MarketCreated;

  constructor(event: MarketCreated) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get marketTemplate(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MisoInitMarket extends ethereum.Event {
  get params(): MisoInitMarket__Params {
    return new MisoInitMarket__Params(this);
  }
}

export class MisoInitMarket__Params {
  _event: MisoInitMarket;

  constructor(event: MisoInitMarket) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MISOMarket__auctionInfoResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: boolean, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class MISOMarket__marketFeesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class MISOMarket extends ethereum.SmartContract {
  static bind(address: Address): MISOMarket {
    return new MISOMarket("MISOMarket", address);
  }

  MARKET_MINTER_ROLE(): Bytes {
    let result = super.call(
      "MARKET_MINTER_ROLE",
      "MARKET_MINTER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MARKET_MINTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MARKET_MINTER_ROLE",
      "MARKET_MINTER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  accessControls(): Address {
    let result = super.call("accessControls", "accessControls():(address)", []);

    return result[0].toAddress();
  }

  try_accessControls(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "accessControls",
      "accessControls():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  auctionInfo(param0: Address): MISOMarket__auctionInfoResult {
    let result = super.call(
      "auctionInfo",
      "auctionInfo(address):(bool,uint64,uint128)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new MISOMarket__auctionInfoResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_auctionInfo(
    param0: Address
  ): ethereum.CallResult<MISOMarket__auctionInfoResult> {
    let result = super.tryCall(
      "auctionInfo",
      "auctionInfo(address):(bool,uint64,uint128)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MISOMarket__auctionInfoResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  auctionTemplateId(): BigInt {
    let result = super.call(
      "auctionTemplateId",
      "auctionTemplateId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_auctionTemplateId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "auctionTemplateId",
      "auctionTemplateId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  auctions(param0: BigInt): Address {
    let result = super.call("auctions", "auctions(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_auctions(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("auctions", "auctions(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bentoBox(): Address {
    let result = super.call("bentoBox", "bentoBox():(address)", []);

    return result[0].toAddress();
  }

  try_bentoBox(): ethereum.CallResult<Address> {
    let result = super.tryCall("bentoBox", "bentoBox():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currentTemplateId(param0: BigInt): BigInt {
    let result = super.call(
      "currentTemplateId",
      "currentTemplateId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_currentTemplateId(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentTemplateId",
      "currentTemplateId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAuctionTemplate(_templateId: BigInt): Address {
    let result = super.call(
      "getAuctionTemplate",
      "getAuctionTemplate(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_templateId)]
    );

    return result[0].toAddress();
  }

  try_getAuctionTemplate(_templateId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAuctionTemplate",
      "getAuctionTemplate(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_templateId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMarketTemplateId(_auction: Address): BigInt {
    let result = super.call(
      "getMarketTemplateId",
      "getMarketTemplateId(address):(uint64)",
      [ethereum.Value.fromAddress(_auction)]
    );

    return result[0].toBigInt();
  }

  try_getMarketTemplateId(_auction: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMarketTemplateId",
      "getMarketTemplateId(address):(uint64)",
      [ethereum.Value.fromAddress(_auction)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMarkets(): Array<Address> {
    let result = super.call("getMarkets", "getMarkets():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getMarkets(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getMarkets", "getMarkets():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getTemplateId(_auctionTemplate: Address): BigInt {
    let result = super.call(
      "getTemplateId",
      "getTemplateId(address):(uint256)",
      [ethereum.Value.fromAddress(_auctionTemplate)]
    );

    return result[0].toBigInt();
  }

  try_getTemplateId(_auctionTemplate: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTemplateId",
      "getTemplateId(address):(uint256)",
      [ethereum.Value.fromAddress(_auctionTemplate)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasMarketMinterRole(_address: Address): boolean {
    let result = super.call(
      "hasMarketMinterRole",
      "hasMarketMinterRole(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBoolean();
  }

  try_hasMarketMinterRole(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasMarketMinterRole",
      "hasMarketMinterRole(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  locked(): boolean {
    let result = super.call("locked", "locked():(bool)", []);

    return result[0].toBoolean();
  }

  try_locked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("locked", "locked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketFees(): MISOMarket__marketFeesResult {
    let result = super.call("marketFees", "marketFees():(uint128,uint32)", []);

    return new MISOMarket__marketFeesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketFees(): ethereum.CallResult<MISOMarket__marketFeesResult> {
    let result = super.tryCall(
      "marketFees",
      "marketFees():(uint128,uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MISOMarket__marketFeesResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  minimumFee(): BigInt {
    let result = super.call("minimumFee", "minimumFee():(uint128)", []);

    return result[0].toBigInt();
  }

  try_minimumFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minimumFee", "minimumFee():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  misoDiv(): Address {
    let result = super.call("misoDiv", "misoDiv():(address)", []);

    return result[0].toAddress();
  }

  try_misoDiv(): ethereum.CallResult<Address> {
    let result = super.tryCall("misoDiv", "misoDiv():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  numberOfAuctions(): BigInt {
    let result = super.call(
      "numberOfAuctions",
      "numberOfAuctions():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfAuctions(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfAuctions",
      "numberOfAuctions():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAuctionTemplateCall extends ethereum.Call {
  get inputs(): AddAuctionTemplateCall__Inputs {
    return new AddAuctionTemplateCall__Inputs(this);
  }

  get outputs(): AddAuctionTemplateCall__Outputs {
    return new AddAuctionTemplateCall__Outputs(this);
  }
}

export class AddAuctionTemplateCall__Inputs {
  _call: AddAuctionTemplateCall;

  constructor(call: AddAuctionTemplateCall) {
    this._call = call;
  }

  get _template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAuctionTemplateCall__Outputs {
  _call: AddAuctionTemplateCall;

  constructor(call: AddAuctionTemplateCall) {
    this._call = call;
  }
}

export class CreateMarketCall extends ethereum.Call {
  get inputs(): CreateMarketCall__Inputs {
    return new CreateMarketCall__Inputs(this);
  }

  get outputs(): CreateMarketCall__Outputs {
    return new CreateMarketCall__Outputs(this);
  }
}

export class CreateMarketCall__Inputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get _templateId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenSupply(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _integratorFeeAccount(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CreateMarketCall__Outputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get newMarket(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DeployMarketCall extends ethereum.Call {
  get inputs(): DeployMarketCall__Inputs {
    return new DeployMarketCall__Inputs(this);
  }

  get outputs(): DeployMarketCall__Outputs {
    return new DeployMarketCall__Outputs(this);
  }
}

export class DeployMarketCall__Inputs {
  _call: DeployMarketCall;

  constructor(call: DeployMarketCall) {
    this._call = call;
  }

  get _templateId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _integratorFeeAccount(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DeployMarketCall__Outputs {
  _call: DeployMarketCall;

  constructor(call: DeployMarketCall) {
    this._call = call;
  }

  get newMarket(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class InitMISOMarketCall extends ethereum.Call {
  get inputs(): InitMISOMarketCall__Inputs {
    return new InitMISOMarketCall__Inputs(this);
  }

  get outputs(): InitMISOMarketCall__Outputs {
    return new InitMISOMarketCall__Outputs(this);
  }
}

export class InitMISOMarketCall__Inputs {
  _call: InitMISOMarketCall;

  constructor(call: InitMISOMarketCall) {
    this._call = call;
  }

  get _accessControls(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bentoBox(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _templates(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class InitMISOMarketCall__Outputs {
  _call: InitMISOMarketCall;

  constructor(call: InitMISOMarketCall) {
    this._call = call;
  }
}

export class RemoveAuctionTemplateCall extends ethereum.Call {
  get inputs(): RemoveAuctionTemplateCall__Inputs {
    return new RemoveAuctionTemplateCall__Inputs(this);
  }

  get outputs(): RemoveAuctionTemplateCall__Outputs {
    return new RemoveAuctionTemplateCall__Outputs(this);
  }
}

export class RemoveAuctionTemplateCall__Inputs {
  _call: RemoveAuctionTemplateCall;

  constructor(call: RemoveAuctionTemplateCall) {
    this._call = call;
  }

  get _templateId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveAuctionTemplateCall__Outputs {
  _call: RemoveAuctionTemplateCall;

  constructor(call: RemoveAuctionTemplateCall) {
    this._call = call;
  }
}

export class SetCurrentTemplateIdCall extends ethereum.Call {
  get inputs(): SetCurrentTemplateIdCall__Inputs {
    return new SetCurrentTemplateIdCall__Inputs(this);
  }

  get outputs(): SetCurrentTemplateIdCall__Outputs {
    return new SetCurrentTemplateIdCall__Outputs(this);
  }
}

export class SetCurrentTemplateIdCall__Inputs {
  _call: SetCurrentTemplateIdCall;

  constructor(call: SetCurrentTemplateIdCall) {
    this._call = call;
  }

  get _templateType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _templateId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetCurrentTemplateIdCall__Outputs {
  _call: SetCurrentTemplateIdCall;

  constructor(call: SetCurrentTemplateIdCall) {
    this._call = call;
  }
}

export class SetDividendsCall extends ethereum.Call {
  get inputs(): SetDividendsCall__Inputs {
    return new SetDividendsCall__Inputs(this);
  }

  get outputs(): SetDividendsCall__Outputs {
    return new SetDividendsCall__Outputs(this);
  }
}

export class SetDividendsCall__Inputs {
  _call: SetDividendsCall;

  constructor(call: SetDividendsCall) {
    this._call = call;
  }

  get _divaddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDividendsCall__Outputs {
  _call: SetDividendsCall;

  constructor(call: SetDividendsCall) {
    this._call = call;
  }
}

export class SetIntegratorFeePctCall extends ethereum.Call {
  get inputs(): SetIntegratorFeePctCall__Inputs {
    return new SetIntegratorFeePctCall__Inputs(this);
  }

  get outputs(): SetIntegratorFeePctCall__Outputs {
    return new SetIntegratorFeePctCall__Outputs(this);
  }
}

export class SetIntegratorFeePctCall__Inputs {
  _call: SetIntegratorFeePctCall;

  constructor(call: SetIntegratorFeePctCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetIntegratorFeePctCall__Outputs {
  _call: SetIntegratorFeePctCall;

  constructor(call: SetIntegratorFeePctCall) {
    this._call = call;
  }
}

export class SetLockedCall extends ethereum.Call {
  get inputs(): SetLockedCall__Inputs {
    return new SetLockedCall__Inputs(this);
  }

  get outputs(): SetLockedCall__Outputs {
    return new SetLockedCall__Outputs(this);
  }
}

export class SetLockedCall__Inputs {
  _call: SetLockedCall;

  constructor(call: SetLockedCall) {
    this._call = call;
  }

  get _locked(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetLockedCall__Outputs {
  _call: SetLockedCall;

  constructor(call: SetLockedCall) {
    this._call = call;
  }
}

export class SetMinimumFeeCall extends ethereum.Call {
  get inputs(): SetMinimumFeeCall__Inputs {
    return new SetMinimumFeeCall__Inputs(this);
  }

  get outputs(): SetMinimumFeeCall__Outputs {
    return new SetMinimumFeeCall__Outputs(this);
  }
}

export class SetMinimumFeeCall__Inputs {
  _call: SetMinimumFeeCall;

  constructor(call: SetMinimumFeeCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumFeeCall__Outputs {
  _call: SetMinimumFeeCall;

  constructor(call: SetMinimumFeeCall) {
    this._call = call;
  }
}
