// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedCommitment extends ethereum.Event {
  get params(): AddedCommitment__Params {
    return new AddedCommitment__Params(this);
  }
}

export class AddedCommitment__Params {
  _event: AddedCommitment;

  constructor(event: AddedCommitment) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get commitment(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AdminRoleGranted extends ethereum.Event {
  get params(): AdminRoleGranted__Params {
    return new AdminRoleGranted__Params(this);
  }
}

export class AdminRoleGranted__Params {
  _event: AdminRoleGranted;

  constructor(event: AdminRoleGranted) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AdminRoleRemoved extends ethereum.Event {
  get params(): AdminRoleRemoved__Params {
    return new AdminRoleRemoved__Params(this);
  }
}

export class AdminRoleRemoved__Params {
  _event: AdminRoleRemoved;

  constructor(event: AdminRoleRemoved) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AuctionCancelled extends ethereum.Event {
  get params(): AuctionCancelled__Params {
    return new AuctionCancelled__Params(this);
  }
}

export class AuctionCancelled__Params {
  _event: AuctionCancelled;

  constructor(event: AuctionCancelled) {
    this._event = event;
  }
}

export class AuctionFinalized extends ethereum.Event {
  get params(): AuctionFinalized__Params {
    return new AuctionFinalized__Params(this);
  }
}

export class AuctionFinalized__Params {
  _event: AuctionFinalized;

  constructor(event: AuctionFinalized) {
    this._event = event;
  }
}

export class AuctionPriceUpdated extends ethereum.Event {
  get params(): AuctionPriceUpdated__Params {
    return new AuctionPriceUpdated__Params(this);
  }
}

export class AuctionPriceUpdated__Params {
  _event: AuctionPriceUpdated;

  constructor(event: AuctionPriceUpdated) {
    this._event = event;
  }

  get minimumCommitmentAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AuctionTimeUpdated extends ethereum.Event {
  get params(): AuctionTimeUpdated__Params {
    return new AuctionTimeUpdated__Params(this);
  }
}

export class AuctionTimeUpdated__Params {
  _event: AuctionTimeUpdated;

  constructor(event: AuctionTimeUpdated) {
    this._event = event;
  }

  get startTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AuctionWalletUpdated extends ethereum.Event {
  get params(): AuctionWalletUpdated__Params {
    return new AuctionWalletUpdated__Params(this);
  }
}

export class AuctionWalletUpdated__Params {
  _event: AuctionWalletUpdated;

  constructor(event: AuctionWalletUpdated) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DocumentRemoved extends ethereum.Event {
  get params(): DocumentRemoved__Params {
    return new DocumentRemoved__Params(this);
  }
}

export class DocumentRemoved__Params {
  _event: DocumentRemoved;

  constructor(event: DocumentRemoved) {
    this._event = event;
  }

  get _name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _data(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class DocumentUpdated extends ethereum.Event {
  get params(): DocumentUpdated__Params {
    return new DocumentUpdated__Params(this);
  }
}

export class DocumentUpdated__Params {
  _event: DocumentUpdated;

  constructor(event: DocumentUpdated) {
    this._event = event;
  }

  get _name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _data(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class MinterRoleGranted extends ethereum.Event {
  get params(): MinterRoleGranted__Params {
    return new MinterRoleGranted__Params(this);
  }
}

export class MinterRoleGranted__Params {
  _event: MinterRoleGranted;

  constructor(event: MinterRoleGranted) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MinterRoleRemoved extends ethereum.Event {
  get params(): MinterRoleRemoved__Params {
    return new MinterRoleRemoved__Params(this);
  }
}

export class MinterRoleRemoved__Params {
  _event: MinterRoleRemoved;

  constructor(event: MinterRoleRemoved) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OperatorRoleGranted extends ethereum.Event {
  get params(): OperatorRoleGranted__Params {
    return new OperatorRoleGranted__Params(this);
  }
}

export class OperatorRoleGranted__Params {
  _event: OperatorRoleGranted;

  constructor(event: OperatorRoleGranted) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OperatorRoleRemoved extends ethereum.Event {
  get params(): OperatorRoleRemoved__Params {
    return new OperatorRoleRemoved__Params(this);
  }
}

export class OperatorRoleRemoved__Params {
  _event: OperatorRoleRemoved;

  constructor(event: OperatorRoleRemoved) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SmartContractRoleGranted extends ethereum.Event {
  get params(): SmartContractRoleGranted__Params {
    return new SmartContractRoleGranted__Params(this);
  }
}

export class SmartContractRoleGranted__Params {
  _event: SmartContractRoleGranted;

  constructor(event: SmartContractRoleGranted) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SmartContractRoleRemoved extends ethereum.Event {
  get params(): SmartContractRoleRemoved__Params {
    return new SmartContractRoleRemoved__Params(this);
  }
}

export class SmartContractRoleRemoved__Params {
  _event: SmartContractRoleRemoved;

  constructor(event: SmartContractRoleRemoved) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BatchAuction__getBaseInformationResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }
}

export class BatchAuction__getDocumentResult {
  value0: string;
  value1: BigInt;

  constructor(value0: string, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class BatchAuction__marketInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class BatchAuction__marketStatusResult {
  value0: BigInt;
  value1: BigInt;
  value2: boolean;
  value3: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: boolean,
    value3: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }
}

export class BatchAuction extends ethereum.SmartContract {
  static bind(address: Address): BatchAuction {
    return new BatchAuction("BatchAuction", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MINTER_ROLE(): Bytes {
    let result = super.call("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MINTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SMART_CONTRACT_ROLE(): Bytes {
    let result = super.call(
      "SMART_CONTRACT_ROLE",
      "SMART_CONTRACT_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_SMART_CONTRACT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SMART_CONTRACT_ROLE",
      "SMART_CONTRACT_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  auctionEnded(): boolean {
    let result = super.call("auctionEnded", "auctionEnded():(bool)", []);

    return result[0].toBoolean();
  }

  try_auctionEnded(): ethereum.CallResult<boolean> {
    let result = super.tryCall("auctionEnded", "auctionEnded():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  auctionSuccessful(): boolean {
    let result = super.call(
      "auctionSuccessful",
      "auctionSuccessful():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_auctionSuccessful(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "auctionSuccessful",
      "auctionSuccessful():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  auctionToken(): Address {
    let result = super.call("auctionToken", "auctionToken():(address)", []);

    return result[0].toAddress();
  }

  try_auctionToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("auctionToken", "auctionToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  claimed(param0: Address): BigInt {
    let result = super.call("claimed", "claimed(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_claimed(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("claimed", "claimed(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  commitments(param0: Address): BigInt {
    let result = super.call("commitments", "commitments(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_commitments(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "commitments",
      "commitments(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  finalizeTimeExpired(): boolean {
    let result = super.call(
      "finalizeTimeExpired",
      "finalizeTimeExpired():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_finalizeTimeExpired(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "finalizeTimeExpired",
      "finalizeTimeExpired():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  finalized(): boolean {
    let result = super.call("finalized", "finalized():(bool)", []);

    return result[0].toBoolean();
  }

  try_finalized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("finalized", "finalized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAllDocuments(): Array<string> {
    let result = super.call(
      "getAllDocuments",
      "getAllDocuments():(string[])",
      []
    );

    return result[0].toStringArray();
  }

  try_getAllDocuments(): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getAllDocuments",
      "getAllDocuments():(string[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getBaseInformation(): BatchAuction__getBaseInformationResult {
    let result = super.call(
      "getBaseInformation",
      "getBaseInformation():(address,uint64,uint64,bool)",
      []
    );

    return new BatchAuction__getBaseInformationResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBoolean()
    );
  }

  try_getBaseInformation(): ethereum.CallResult<
    BatchAuction__getBaseInformationResult
  > {
    let result = super.tryCall(
      "getBaseInformation",
      "getBaseInformation():(address,uint64,uint64,bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BatchAuction__getBaseInformationResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBoolean()
      )
    );
  }

  getBatchAuctionInitData(
    _funder: Address,
    _token: Address,
    _totalTokens: BigInt,
    _startTime: BigInt,
    _endTime: BigInt,
    _paymentCurrency: Address,
    _minimumCommitmentAmount: BigInt,
    _admin: Address,
    _pointList: Address,
    _wallet: Address
  ): Bytes {
    let result = super.call(
      "getBatchAuctionInitData",
      "getBatchAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,address,address,address):(bytes)",
      [
        ethereum.Value.fromAddress(_funder),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_totalTokens),
        ethereum.Value.fromUnsignedBigInt(_startTime),
        ethereum.Value.fromUnsignedBigInt(_endTime),
        ethereum.Value.fromAddress(_paymentCurrency),
        ethereum.Value.fromUnsignedBigInt(_minimumCommitmentAmount),
        ethereum.Value.fromAddress(_admin),
        ethereum.Value.fromAddress(_pointList),
        ethereum.Value.fromAddress(_wallet)
      ]
    );

    return result[0].toBytes();
  }

  try_getBatchAuctionInitData(
    _funder: Address,
    _token: Address,
    _totalTokens: BigInt,
    _startTime: BigInt,
    _endTime: BigInt,
    _paymentCurrency: Address,
    _minimumCommitmentAmount: BigInt,
    _admin: Address,
    _pointList: Address,
    _wallet: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getBatchAuctionInitData",
      "getBatchAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,address,address,address):(bytes)",
      [
        ethereum.Value.fromAddress(_funder),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_totalTokens),
        ethereum.Value.fromUnsignedBigInt(_startTime),
        ethereum.Value.fromUnsignedBigInt(_endTime),
        ethereum.Value.fromAddress(_paymentCurrency),
        ethereum.Value.fromUnsignedBigInt(_minimumCommitmentAmount),
        ethereum.Value.fromAddress(_admin),
        ethereum.Value.fromAddress(_pointList),
        ethereum.Value.fromAddress(_wallet)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getDocument(_name: string): BatchAuction__getDocumentResult {
    let result = super.call(
      "getDocument",
      "getDocument(string):(string,uint256)",
      [ethereum.Value.fromString(_name)]
    );

    return new BatchAuction__getDocumentResult(
      result[0].toString(),
      result[1].toBigInt()
    );
  }

  try_getDocument(
    _name: string
  ): ethereum.CallResult<BatchAuction__getDocumentResult> {
    let result = super.tryCall(
      "getDocument",
      "getDocument(string):(string,uint256)",
      [ethereum.Value.fromString(_name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BatchAuction__getDocumentResult(
        value[0].toString(),
        value[1].toBigInt()
      )
    );
  }

  getDocumentCount(): BigInt {
    let result = super.call(
      "getDocumentCount",
      "getDocumentCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getDocumentCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDocumentCount",
      "getDocumentCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDocumentName(_index: BigInt): string {
    let result = super.call(
      "getDocumentName",
      "getDocumentName(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );

    return result[0].toString();
  }

  try_getDocumentName(_index: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getDocumentName",
      "getDocumentName(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTotalTokens(): BigInt {
    let result = super.call("getTotalTokens", "getTotalTokens():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getTotalTokens(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalTokens",
      "getTotalTokens():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasAdminRole(_address: Address): boolean {
    let result = super.call("hasAdminRole", "hasAdminRole(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBoolean();
  }

  try_hasAdminRole(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasAdminRole", "hasAdminRole(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasMinterRole(_address: Address): boolean {
    let result = super.call("hasMinterRole", "hasMinterRole(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBoolean();
  }

  try_hasMinterRole(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasMinterRole",
      "hasMinterRole(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasOperatorRole(_address: Address): boolean {
    let result = super.call(
      "hasOperatorRole",
      "hasOperatorRole(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBoolean();
  }

  try_hasOperatorRole(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasOperatorRole",
      "hasOperatorRole(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasSmartContractRole(_address: Address): boolean {
    let result = super.call(
      "hasSmartContractRole",
      "hasSmartContractRole(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBoolean();
  }

  try_hasSmartContractRole(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasSmartContractRole",
      "hasSmartContractRole(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketInfo(): BatchAuction__marketInfoResult {
    let result = super.call(
      "marketInfo",
      "marketInfo():(uint64,uint64,uint128)",
      []
    );

    return new BatchAuction__marketInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_marketInfo(): ethereum.CallResult<BatchAuction__marketInfoResult> {
    let result = super.tryCall(
      "marketInfo",
      "marketInfo():(uint64,uint64,uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BatchAuction__marketInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  marketParticipationAgreement(): string {
    let result = super.call(
      "marketParticipationAgreement",
      "marketParticipationAgreement():(string)",
      []
    );

    return result[0].toString();
  }

  try_marketParticipationAgreement(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "marketParticipationAgreement",
      "marketParticipationAgreement():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  marketStatus(): BatchAuction__marketStatusResult {
    let result = super.call(
      "marketStatus",
      "marketStatus():(uint128,uint128,bool,bool)",
      []
    );

    return new BatchAuction__marketStatusResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toBoolean()
    );
  }

  try_marketStatus(): ethereum.CallResult<BatchAuction__marketStatusResult> {
    let result = super.tryCall(
      "marketStatus",
      "marketStatus():(uint128,uint128,bool,bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BatchAuction__marketStatusResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toBoolean()
      )
    );
  }

  marketTemplate(): BigInt {
    let result = super.call("marketTemplate", "marketTemplate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_marketTemplate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "marketTemplate",
      "marketTemplate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paymentCurrency(): Address {
    let result = super.call(
      "paymentCurrency",
      "paymentCurrency():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_paymentCurrency(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "paymentCurrency",
      "paymentCurrency():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pointList(): Address {
    let result = super.call("pointList", "pointList():(address)", []);

    return result[0].toAddress();
  }

  try_pointList(): ethereum.CallResult<Address> {
    let result = super.tryCall("pointList", "pointList():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenPrice(): BigInt {
    let result = super.call("tokenPrice", "tokenPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_tokenPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("tokenPrice", "tokenPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokensClaimable(_user: Address): BigInt {
    let result = super.call(
      "tokensClaimable",
      "tokensClaimable(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBigInt();
  }

  try_tokensClaimable(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokensClaimable",
      "tokensClaimable(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  wallet(): Address {
    let result = super.call("wallet", "wallet():(address)", []);

    return result[0].toAddress();
  }

  try_wallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("wallet", "wallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddAdminRoleCall extends ethereum.Call {
  get inputs(): AddAdminRoleCall__Inputs {
    return new AddAdminRoleCall__Inputs(this);
  }

  get outputs(): AddAdminRoleCall__Outputs {
    return new AddAdminRoleCall__Outputs(this);
  }
}

export class AddAdminRoleCall__Inputs {
  _call: AddAdminRoleCall;

  constructor(call: AddAdminRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAdminRoleCall__Outputs {
  _call: AddAdminRoleCall;

  constructor(call: AddAdminRoleCall) {
    this._call = call;
  }
}

export class AddMinterRoleCall extends ethereum.Call {
  get inputs(): AddMinterRoleCall__Inputs {
    return new AddMinterRoleCall__Inputs(this);
  }

  get outputs(): AddMinterRoleCall__Outputs {
    return new AddMinterRoleCall__Outputs(this);
  }
}

export class AddMinterRoleCall__Inputs {
  _call: AddMinterRoleCall;

  constructor(call: AddMinterRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddMinterRoleCall__Outputs {
  _call: AddMinterRoleCall;

  constructor(call: AddMinterRoleCall) {
    this._call = call;
  }
}

export class AddOperatorRoleCall extends ethereum.Call {
  get inputs(): AddOperatorRoleCall__Inputs {
    return new AddOperatorRoleCall__Inputs(this);
  }

  get outputs(): AddOperatorRoleCall__Outputs {
    return new AddOperatorRoleCall__Outputs(this);
  }
}

export class AddOperatorRoleCall__Inputs {
  _call: AddOperatorRoleCall;

  constructor(call: AddOperatorRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddOperatorRoleCall__Outputs {
  _call: AddOperatorRoleCall;

  constructor(call: AddOperatorRoleCall) {
    this._call = call;
  }
}

export class AddSmartContractRoleCall extends ethereum.Call {
  get inputs(): AddSmartContractRoleCall__Inputs {
    return new AddSmartContractRoleCall__Inputs(this);
  }

  get outputs(): AddSmartContractRoleCall__Outputs {
    return new AddSmartContractRoleCall__Outputs(this);
  }
}

export class AddSmartContractRoleCall__Inputs {
  _call: AddSmartContractRoleCall;

  constructor(call: AddSmartContractRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddSmartContractRoleCall__Outputs {
  _call: AddSmartContractRoleCall;

  constructor(call: AddSmartContractRoleCall) {
    this._call = call;
  }
}

export class BatchCall extends ethereum.Call {
  get inputs(): BatchCall__Inputs {
    return new BatchCall__Inputs(this);
  }

  get outputs(): BatchCall__Outputs {
    return new BatchCall__Outputs(this);
  }
}

export class BatchCall__Inputs {
  _call: BatchCall;

  constructor(call: BatchCall) {
    this._call = call;
  }

  get calls(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get revertOnFail(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class BatchCall__Outputs {
  _call: BatchCall;

  constructor(call: BatchCall) {
    this._call = call;
  }

  get successes(): Array<boolean> {
    return this._call.outputValues[0].value.toBooleanArray();
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[1].value.toBytesArray();
  }
}

export class CancelAuctionCall extends ethereum.Call {
  get inputs(): CancelAuctionCall__Inputs {
    return new CancelAuctionCall__Inputs(this);
  }

  get outputs(): CancelAuctionCall__Outputs {
    return new CancelAuctionCall__Outputs(this);
  }
}

export class CancelAuctionCall__Inputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }
}

export class CancelAuctionCall__Outputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }
}

export class CommitEthCall extends ethereum.Call {
  get inputs(): CommitEthCall__Inputs {
    return new CommitEthCall__Inputs(this);
  }

  get outputs(): CommitEthCall__Outputs {
    return new CommitEthCall__Outputs(this);
  }
}

export class CommitEthCall__Inputs {
  _call: CommitEthCall;

  constructor(call: CommitEthCall) {
    this._call = call;
  }

  get _beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get readAndAgreedToMarketParticipationAgreement(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class CommitEthCall__Outputs {
  _call: CommitEthCall;

  constructor(call: CommitEthCall) {
    this._call = call;
  }
}

export class CommitTokensCall extends ethereum.Call {
  get inputs(): CommitTokensCall__Inputs {
    return new CommitTokensCall__Inputs(this);
  }

  get outputs(): CommitTokensCall__Outputs {
    return new CommitTokensCall__Outputs(this);
  }
}

export class CommitTokensCall__Inputs {
  _call: CommitTokensCall;

  constructor(call: CommitTokensCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get readAndAgreedToMarketParticipationAgreement(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class CommitTokensCall__Outputs {
  _call: CommitTokensCall;

  constructor(call: CommitTokensCall) {
    this._call = call;
  }
}

export class CommitTokensFromCall extends ethereum.Call {
  get inputs(): CommitTokensFromCall__Inputs {
    return new CommitTokensFromCall__Inputs(this);
  }

  get outputs(): CommitTokensFromCall__Outputs {
    return new CommitTokensFromCall__Outputs(this);
  }
}

export class CommitTokensFromCall__Inputs {
  _call: CommitTokensFromCall;

  constructor(call: CommitTokensFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get readAndAgreedToMarketParticipationAgreement(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CommitTokensFromCall__Outputs {
  _call: CommitTokensFromCall;

  constructor(call: CommitTokensFromCall) {
    this._call = call;
  }
}

export class EnableListCall extends ethereum.Call {
  get inputs(): EnableListCall__Inputs {
    return new EnableListCall__Inputs(this);
  }

  get outputs(): EnableListCall__Outputs {
    return new EnableListCall__Outputs(this);
  }
}

export class EnableListCall__Inputs {
  _call: EnableListCall;

  constructor(call: EnableListCall) {
    this._call = call;
  }

  get _status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class EnableListCall__Outputs {
  _call: EnableListCall;

  constructor(call: EnableListCall) {
    this._call = call;
  }
}

export class FinalizeCall extends ethereum.Call {
  get inputs(): FinalizeCall__Inputs {
    return new FinalizeCall__Inputs(this);
  }

  get outputs(): FinalizeCall__Outputs {
    return new FinalizeCall__Outputs(this);
  }
}

export class FinalizeCall__Inputs {
  _call: FinalizeCall;

  constructor(call: FinalizeCall) {
    this._call = call;
  }
}

export class FinalizeCall__Outputs {
  _call: FinalizeCall;

  constructor(call: FinalizeCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class InitAccessControlsCall extends ethereum.Call {
  get inputs(): InitAccessControlsCall__Inputs {
    return new InitAccessControlsCall__Inputs(this);
  }

  get outputs(): InitAccessControlsCall__Outputs {
    return new InitAccessControlsCall__Outputs(this);
  }
}

export class InitAccessControlsCall__Inputs {
  _call: InitAccessControlsCall;

  constructor(call: InitAccessControlsCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitAccessControlsCall__Outputs {
  _call: InitAccessControlsCall;

  constructor(call: InitAccessControlsCall) {
    this._call = call;
  }
}

export class InitAuctionCall extends ethereum.Call {
  get inputs(): InitAuctionCall__Inputs {
    return new InitAuctionCall__Inputs(this);
  }

  get outputs(): InitAuctionCall__Outputs {
    return new InitAuctionCall__Outputs(this);
  }
}

export class InitAuctionCall__Inputs {
  _call: InitAuctionCall;

  constructor(call: InitAuctionCall) {
    this._call = call;
  }

  get _funder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _totalTokens(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _startTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _endTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _paymentCurrency(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _minimumCommitmentAmount(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _admin(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _pointList(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _wallet(): Address {
    return this._call.inputValues[9].value.toAddress();
  }
}

export class InitAuctionCall__Outputs {
  _call: InitAuctionCall;

  constructor(call: InitAuctionCall) {
    this._call = call;
  }
}

export class InitMarketCall extends ethereum.Call {
  get inputs(): InitMarketCall__Inputs {
    return new InitMarketCall__Inputs(this);
  }

  get outputs(): InitMarketCall__Outputs {
    return new InitMarketCall__Outputs(this);
  }
}

export class InitMarketCall__Inputs {
  _call: InitMarketCall;

  constructor(call: InitMarketCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class InitMarketCall__Outputs {
  _call: InitMarketCall;

  constructor(call: InitMarketCall) {
    this._call = call;
  }
}

export class PermitTokenCall extends ethereum.Call {
  get inputs(): PermitTokenCall__Inputs {
    return new PermitTokenCall__Inputs(this);
  }

  get outputs(): PermitTokenCall__Outputs {
    return new PermitTokenCall__Outputs(this);
  }
}

export class PermitTokenCall__Inputs {
  _call: PermitTokenCall;

  constructor(call: PermitTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class PermitTokenCall__Outputs {
  _call: PermitTokenCall;

  constructor(call: PermitTokenCall) {
    this._call = call;
  }
}

export class RemoveAdminRoleCall extends ethereum.Call {
  get inputs(): RemoveAdminRoleCall__Inputs {
    return new RemoveAdminRoleCall__Inputs(this);
  }

  get outputs(): RemoveAdminRoleCall__Outputs {
    return new RemoveAdminRoleCall__Outputs(this);
  }
}

export class RemoveAdminRoleCall__Inputs {
  _call: RemoveAdminRoleCall;

  constructor(call: RemoveAdminRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAdminRoleCall__Outputs {
  _call: RemoveAdminRoleCall;

  constructor(call: RemoveAdminRoleCall) {
    this._call = call;
  }
}

export class RemoveDocumentCall extends ethereum.Call {
  get inputs(): RemoveDocumentCall__Inputs {
    return new RemoveDocumentCall__Inputs(this);
  }

  get outputs(): RemoveDocumentCall__Outputs {
    return new RemoveDocumentCall__Outputs(this);
  }
}

export class RemoveDocumentCall__Inputs {
  _call: RemoveDocumentCall;

  constructor(call: RemoveDocumentCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RemoveDocumentCall__Outputs {
  _call: RemoveDocumentCall;

  constructor(call: RemoveDocumentCall) {
    this._call = call;
  }
}

export class RemoveMinterRoleCall extends ethereum.Call {
  get inputs(): RemoveMinterRoleCall__Inputs {
    return new RemoveMinterRoleCall__Inputs(this);
  }

  get outputs(): RemoveMinterRoleCall__Outputs {
    return new RemoveMinterRoleCall__Outputs(this);
  }
}

export class RemoveMinterRoleCall__Inputs {
  _call: RemoveMinterRoleCall;

  constructor(call: RemoveMinterRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveMinterRoleCall__Outputs {
  _call: RemoveMinterRoleCall;

  constructor(call: RemoveMinterRoleCall) {
    this._call = call;
  }
}

export class RemoveOperatorRoleCall extends ethereum.Call {
  get inputs(): RemoveOperatorRoleCall__Inputs {
    return new RemoveOperatorRoleCall__Inputs(this);
  }

  get outputs(): RemoveOperatorRoleCall__Outputs {
    return new RemoveOperatorRoleCall__Outputs(this);
  }
}

export class RemoveOperatorRoleCall__Inputs {
  _call: RemoveOperatorRoleCall;

  constructor(call: RemoveOperatorRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveOperatorRoleCall__Outputs {
  _call: RemoveOperatorRoleCall;

  constructor(call: RemoveOperatorRoleCall) {
    this._call = call;
  }
}

export class RemoveSmartContractRoleCall extends ethereum.Call {
  get inputs(): RemoveSmartContractRoleCall__Inputs {
    return new RemoveSmartContractRoleCall__Inputs(this);
  }

  get outputs(): RemoveSmartContractRoleCall__Outputs {
    return new RemoveSmartContractRoleCall__Outputs(this);
  }
}

export class RemoveSmartContractRoleCall__Inputs {
  _call: RemoveSmartContractRoleCall;

  constructor(call: RemoveSmartContractRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveSmartContractRoleCall__Outputs {
  _call: RemoveSmartContractRoleCall;

  constructor(call: RemoveSmartContractRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAuctionPriceCall extends ethereum.Call {
  get inputs(): SetAuctionPriceCall__Inputs {
    return new SetAuctionPriceCall__Inputs(this);
  }

  get outputs(): SetAuctionPriceCall__Outputs {
    return new SetAuctionPriceCall__Outputs(this);
  }
}

export class SetAuctionPriceCall__Inputs {
  _call: SetAuctionPriceCall;

  constructor(call: SetAuctionPriceCall) {
    this._call = call;
  }

  get _minimumCommitmentAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAuctionPriceCall__Outputs {
  _call: SetAuctionPriceCall;

  constructor(call: SetAuctionPriceCall) {
    this._call = call;
  }
}

export class SetAuctionTimeCall extends ethereum.Call {
  get inputs(): SetAuctionTimeCall__Inputs {
    return new SetAuctionTimeCall__Inputs(this);
  }

  get outputs(): SetAuctionTimeCall__Outputs {
    return new SetAuctionTimeCall__Outputs(this);
  }
}

export class SetAuctionTimeCall__Inputs {
  _call: SetAuctionTimeCall;

  constructor(call: SetAuctionTimeCall) {
    this._call = call;
  }

  get _startTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _endTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetAuctionTimeCall__Outputs {
  _call: SetAuctionTimeCall;

  constructor(call: SetAuctionTimeCall) {
    this._call = call;
  }
}

export class SetAuctionWalletCall extends ethereum.Call {
  get inputs(): SetAuctionWalletCall__Inputs {
    return new SetAuctionWalletCall__Inputs(this);
  }

  get outputs(): SetAuctionWalletCall__Outputs {
    return new SetAuctionWalletCall__Outputs(this);
  }
}

export class SetAuctionWalletCall__Inputs {
  _call: SetAuctionWalletCall;

  constructor(call: SetAuctionWalletCall) {
    this._call = call;
  }

  get _wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuctionWalletCall__Outputs {
  _call: SetAuctionWalletCall;

  constructor(call: SetAuctionWalletCall) {
    this._call = call;
  }
}

export class SetDocumentCall extends ethereum.Call {
  get inputs(): SetDocumentCall__Inputs {
    return new SetDocumentCall__Inputs(this);
  }

  get outputs(): SetDocumentCall__Outputs {
    return new SetDocumentCall__Outputs(this);
  }
}

export class SetDocumentCall__Inputs {
  _call: SetDocumentCall;

  constructor(call: SetDocumentCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _data(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetDocumentCall__Outputs {
  _call: SetDocumentCall;

  constructor(call: SetDocumentCall) {
    this._call = call;
  }
}

export class SetDocumentsCall extends ethereum.Call {
  get inputs(): SetDocumentsCall__Inputs {
    return new SetDocumentsCall__Inputs(this);
  }

  get outputs(): SetDocumentsCall__Outputs {
    return new SetDocumentsCall__Outputs(this);
  }
}

export class SetDocumentsCall__Inputs {
  _call: SetDocumentsCall;

  constructor(call: SetDocumentsCall) {
    this._call = call;
  }

  get _name(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get _data(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class SetDocumentsCall__Outputs {
  _call: SetDocumentsCall;

  constructor(call: SetDocumentsCall) {
    this._call = call;
  }
}

export class SetListCall extends ethereum.Call {
  get inputs(): SetListCall__Inputs {
    return new SetListCall__Inputs(this);
  }

  get outputs(): SetListCall__Outputs {
    return new SetListCall__Outputs(this);
  }
}

export class SetListCall__Inputs {
  _call: SetListCall;

  constructor(call: SetListCall) {
    this._call = call;
  }

  get _list(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetListCall__Outputs {
  _call: SetListCall;

  constructor(call: SetListCall) {
    this._call = call;
  }
}

export class WithdrawTokensCall extends ethereum.Call {
  get inputs(): WithdrawTokensCall__Inputs {
    return new WithdrawTokensCall__Inputs(this);
  }

  get outputs(): WithdrawTokensCall__Outputs {
    return new WithdrawTokensCall__Outputs(this);
  }
}

export class WithdrawTokensCall__Inputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }

  get beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawTokensCall__Outputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }
}

export class WithdrawTokens1Call extends ethereum.Call {
  get inputs(): WithdrawTokens1Call__Inputs {
    return new WithdrawTokens1Call__Inputs(this);
  }

  get outputs(): WithdrawTokens1Call__Outputs {
    return new WithdrawTokens1Call__Outputs(this);
  }
}

export class WithdrawTokens1Call__Inputs {
  _call: WithdrawTokens1Call;

  constructor(call: WithdrawTokens1Call) {
    this._call = call;
  }
}

export class WithdrawTokens1Call__Outputs {
  _call: WithdrawTokens1Call;

  constructor(call: WithdrawTokens1Call) {
    this._call = call;
  }
}
