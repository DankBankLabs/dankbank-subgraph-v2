specVersion: 0.0.4
schema:
  file: ./schemas/schema.graphql
dataSources:
  - kind: ethereum/contract
    name: DankBankMarket
    network: "{{network}}"
    source:
      address: "{{market}}"
      abi: DankBankMarket
      startBlock: {{marketStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ApprovalForAll
        - DankBankBuy
        - DankBankSell
        - LiquidityAdded
        - LiquidityRemoved
        - TransferBatch
        - TransferSingle
        - URI
      abis:
        - name: DankBankMarket
          file: ./abis/DankBankMarket.json
        - name: ERC721TokenVault
          file: ./abis/ERC721TokenVault.json
      eventHandlers:
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: DankBankBuy(indexed address,address,uint256,uint256)
          handler: handleDankBankBuy
        - event: DankBankSell(indexed address,address,uint256,uint256)
          handler: handleDankBankSell
        - event: LiquidityAdded(indexed address,address,uint256,uint256)
          handler: handleLiquidityAdded
        - event: LiquidityRemoved(indexed address,address,uint256,uint256,uint256)
          handler: handleLiquidityRemoved
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: URI(string,indexed uint256)
          handler: handleURI
      file: ./src/marketMapping.ts
  - kind: ethereum/contract
    name: ERC721VaultFactory
    network: "{{network}}"
    source:
      address: "{{vaultFactory}}"
      abi: ERC721VaultFactory
      startBlock: {{vaultFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Mint
      abis:
        - name: ERC721VaultFactory
          file: ./abis/ERC721VaultFactory.json
        - name: ERC721MetaData
          file: ./abis/ERC721MetaData.json
        - name: ERC721TokenVault
          file: ./abis/ERC721TokenVault.json
      eventHandlers:
        - event: Mint(indexed address,uint256,uint256,address,uint256)
          handler: handleMint
      file: ./src/vaultFactoryMapping.ts
  {{#isMainnet}}
  - kind: ethereum/contract
    name: ERC721SingleVaultFactory
    network: "{{network}}"
    source:
      address: "{{singleVaultFactory}}"
      abi: ERC721VaultFactory
      startBlock: {{singleVaultFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Mint
      abis:
        - name: ERC721VaultFactory
          file: ./abis/ERC721VaultFactory.json
        - name: ERC721MetaData
          file: ./abis/ERC721MetaData.json
        - name: ERC721TokenVault
          file: ./abis/ERC721TokenVault.json
      eventHandlers:
        - event: Mint(indexed address,uint256,uint256,address,uint256)
          handler: handleMint
      file: ./src/vaultFactoryMapping.ts
  {{/isMainnet}}
  - kind: ethereum/contract
    name: BatchAuctionFactory
    network: "{{network}}"
    source:
      address: "{{misoMarket}}"
      abi: MISOMarket
      startBlock: {{misoMarketStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - MISOMarket
      abis:
        - name: MISOMarket
          file: ./abis/MISOMarket.json
        - name: BatchAuction
          file: ./abis/BatchAuction.json
      eventHandlers:
        - event: MarketCreated(indexed address,indexed address,address)
          handler: handleCreateMarket
      file: ./src/batchAuctionFactoryMapping.ts
templates:
  - kind: ethereum/contract
    name: ERC721TokenVault
    network: "{{network}}"
    source:
      abi: ERC721TokenVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Start
        - Won
        - Bid
        - Redeem
      abis:
        - name: ERC721TokenVault
          file: ./abis/ERC721TokenVault.json
      eventHandlers:
        - event: Start(indexed address,uint256)
          handler: handleStart
        - event: Won(indexed address,uint256)
          handler: handleWon
        - event: Bid(indexed address,uint256)
          handler: handleBid
        - event: Redeem(indexed address)
          handler: handleRedeem
        {{#isMainnet}}
      callHandlers:
        - function: initialize(address,address,uint256,uint256,uint256,uint256,string memory,string memory)
          handler: handleInitialize
        - function: kickCurator(address)
          handler: handleKickCurator
        - function: updateCurator(address)
          handler: handleUpdateCurator
        - function: updateFee(uint256)
          handler: handleUpdateFee
      {{/isMainnet}}
      file: ./src/tokenVaultMapping.ts
  - kind: ethereum/contract
    name: ERC721MetaData
    network: "{{network}}"
    source:
      abi: ERC721MetaData
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      abis:
        - name: ERC721MetaData
          file: ./abis/ERC721MetaData.json
      entities:
        - Transfer
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: hanldeTransfer
      file: ./src/nftMapping.ts
  - kind: ethereum/contract
    name: BatchAuction
    network: "{{network}}"
    source:
      abi: BatchAuction
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - BatchAuction
      abis:
        - name: BatchAuction
          file: ./abis/BatchAuction.json
      eventHandlers:
        - event: AddedCommitment(address,uint256)
          handler: handleCommitEth
        - event: AuctionFinalized()
          handler: handleAuctionFinalized
      file: ./src/batchAuctionMapping.ts
