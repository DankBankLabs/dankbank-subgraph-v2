/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC1155Holder } from "../ERC1155Holder";

export class ERC1155Holder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Holder> {
    return super.deploy(overrides || {}) as Promise<ERC1155Holder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Holder {
    return super.attach(address) as ERC1155Holder;
  }
  connect(signer: Signer): ERC1155Holder__factory {
    return super.connect(signer) as ERC1155Holder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Holder {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Holder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100216301ffc9a760e01b610036565b610031630271189760e51b610036565b6100b9565b6001600160e01b031980821614156100945760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b61039e806100c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610088578063f23a6e61146100c0575b600080fd5b6100736100543660046102f2565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100a76100963660046101e9565b63bc197c8160e01b95945050505050565b6040516001600160e01b0319909116815260200161007f565b6100a76100ce36600461028f565b63f23a6e6160e01b95945050505050565b80356001600160a01b03811681146100f657600080fd5b919050565b600082601f83011261010b578081fd5b8135602067ffffffffffffffff82111561012757610127610352565b8160051b610136828201610321565b838152828101908684018388018501891015610150578687fd5b8693505b85841015610172578035835260019390930192918401918401610154565b50979650505050505050565b600082601f83011261018e578081fd5b813567ffffffffffffffff8111156101a8576101a8610352565b6101bb601f8201601f1916602001610321565b8181528460208386010111156101cf578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610200578081fd5b610209866100df565b9450610217602087016100df565b9350604086013567ffffffffffffffff80821115610233578283fd5b61023f89838a016100fb565b94506060880135915080821115610254578283fd5b61026089838a016100fb565b93506080880135915080821115610275578283fd5b506102828882890161017e565b9150509295509295909350565b600080600080600060a086880312156102a6578081fd5b6102af866100df565b94506102bd602087016100df565b93506040860135925060608601359150608086013567ffffffffffffffff8111156102e6578182fd5b6102828882890161017e565b600060208284031215610303578081fd5b81356001600160e01b03198116811461031a578182fd5b9392505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561034a5761034a610352565b604052919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ff47ce9d2af51a2cee538573decfb0a4cd3081cb81e8b7cb1894f6d54e18483864736f6c63430008040033";
