/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC1820ImplementerUpgradeable } from "../ERC1820ImplementerUpgradeable";

export class ERC1820ImplementerUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1820ImplementerUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1820ImplementerUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1820ImplementerUpgradeable {
    return super.attach(address) as ERC1820ImplementerUpgradeable;
  }
  connect(signer: Signer): ERC1820ImplementerUpgradeable__factory {
    return super.connect(signer) as ERC1820ImplementerUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1820ImplementerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1820ImplementerUpgradeable;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610114806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b603c603836600460a6565b604e565b60405190815260200160405180910390f35b60008281526001602090815260408083206001600160a01b038516845290915281205460ff16607d576000609f565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b9392505050565b6000806040838503121560b7578182fd5b8235915060208301356001600160a01b038116811460d3578182fd5b80915050925092905056fea26469706673582212208e79e4e9b384598320ebd0731ec387fffb3219119093308df17ff30aea3b0b8b64736f6c63430008040033";
