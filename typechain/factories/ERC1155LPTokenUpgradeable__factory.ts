/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC1155LPTokenUpgradeable } from "../ERC1155LPTokenUpgradeable";

export class ERC1155LPTokenUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155LPTokenUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155LPTokenUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155LPTokenUpgradeable {
    return super.attach(address) as ERC1155LPTokenUpgradeable;
  }
  connect(signer: Signer): ERC1155LPTokenUpgradeable__factory {
    return super.connect(signer) as ERC1155LPTokenUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155LPTokenUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155LPTokenUpgradeable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenSupplies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "lpTokenSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061145a806100206000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c806382b1efc11161006657806382b1efc114610140578063a22cb46514610160578063d315698814610173578063e985e9c514610193578063f242432a146101cf57600080fd5b8062fdd58e146100a257806301ffc9a7146100c85780630e89341c146100eb5780632eb2c2d61461010b5780634e1273f414610120575b600080fd5b6100b56100b0366004610ee0565b6101e2565b6040519081526020015b60405180910390f35b6100db6100d6366004610fd4565b61027b565b60405190151581526020016100bf565b6100fe6100f9366004611013565b6102cd565b6040516100bf9190611194565b61011e610119366004610d9d565b610361565b005b61013361012e366004610f09565b6103f8565b6040516100bf9190611153565b6100b561014e366004611013565b60686020526000908152604090205481565b61011e61016e366004610ea6565b61055a565b6100b5610181366004611013565b60009081526068602052604090205490565b6100db6101a1366004610d6b565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b61011e6101dd366004610e43565b610631565b60006001600160a01b0383166102535760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102ac57506001600160e01b031982166303a24d0760e21b145b806102c757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606780546102dc906112ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610308906112ba565b80156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b50505050509050919050565b6001600160a01b03851633148061037d575061037d85336101a1565b6103e45760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161024a565b6103f185858585856106b8565b5050505050565b6060815183511461045d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161024a565b6000835167ffffffffffffffff81111561048757634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104b0578160200160208202803683370190505b50905060005b8451811015610552576105178582815181106104e257634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061050a57634e487b7160e01b600052603260045260246000fd5b60200260200101516101e2565b82828151811061053757634e487b7160e01b600052603260045260246000fd5b602090810291909101015261054b81611322565b90506104b6565b509392505050565b336001600160a01b03831614156105c55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161024a565b3360008181526066602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03851633148061064d575061064d85336101a1565b6106ab5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161024a565b6103f185858585856108b4565b815183511461071a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161024a565b6001600160a01b0384166107405760405162461bcd60e51b815260040161024a906111ef565b3360005b845181101561084657600085828151811061076f57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061079b57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156107ec5760405162461bcd60e51b815260040161024a90611234565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061082b9084906112a2565b925050819055505050508061083f90611322565b9050610744565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610896929190611166565b60405180910390a46108ac8187878787876109de565b505050505050565b6001600160a01b0384166108da5760405162461bcd60e51b815260040161024a906111ef565b336108f38187876108ea88610b49565b6103f188610b49565b60008481526065602090815260408083206001600160a01b038a168452909152902054838110156109365760405162461bcd60e51b815260040161024a90611234565b60008581526065602090815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906109759084906112a2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109d5828888888888610ba2565b50505050505050565b6001600160a01b0384163b156108ac5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a2290899089908890889088906004016110b0565b602060405180830381600087803b158015610a3c57600080fd5b505af1925050508015610a6c575060408051601f3d908101601f19168201909252610a6991810190610ff7565b60015b610b1957610a78611369565b806308c379a01415610ab25750610a8d611381565b80610a985750610ab4565b8060405162461bcd60e51b815260040161024a9190611194565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161024a565b6001600160e01b0319811663bc197c8160e01b146109d55760405162461bcd60e51b815260040161024a906111a7565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b9157634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156108ac5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610be6908990899088908890889060040161110e565b602060405180830381600087803b158015610c0057600080fd5b505af1925050508015610c30575060408051601f3d908101601f19168201909252610c2d91810190610ff7565b60015b610c3c57610a78611369565b6001600160e01b0319811663f23a6e6160e01b146109d55760405162461bcd60e51b815260040161024a906111a7565b80356001600160a01b0381168114610c8357600080fd5b919050565b600082601f830112610c98578081fd5b81356020610ca58261127e565b604051610cb282826112f5565b8381528281019150858301600585901b87018401881015610cd1578586fd5b855b85811015610cef57813584529284019290840190600101610cd3565b5090979650505050505050565b600082601f830112610d0c578081fd5b813567ffffffffffffffff811115610d2657610d26611353565b604051610d3d601f8301601f1916602001826112f5565b818152846020838601011115610d51578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610d7d578182fd5b610d8683610c6c565b9150610d9460208401610c6c565b90509250929050565b600080600080600060a08688031215610db4578081fd5b610dbd86610c6c565b9450610dcb60208701610c6c565b9350604086013567ffffffffffffffff80821115610de7578283fd5b610df389838a01610c88565b94506060880135915080821115610e08578283fd5b610e1489838a01610c88565b93506080880135915080821115610e29578283fd5b50610e3688828901610cfc565b9150509295509295909350565b600080600080600060a08688031215610e5a578081fd5b610e6386610c6c565b9450610e7160208701610c6c565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e9a578182fd5b610e3688828901610cfc565b60008060408385031215610eb8578182fd5b610ec183610c6c565b915060208301358015158114610ed5578182fd5b809150509250929050565b60008060408385031215610ef2578182fd5b610efb83610c6c565b946020939093013593505050565b60008060408385031215610f1b578182fd5b823567ffffffffffffffff80821115610f32578384fd5b818501915085601f830112610f45578384fd5b81356020610f528261127e565b604051610f5f82826112f5565b8381528281019150858301600585901b870184018b1015610f7e578889fd5b8896505b84871015610fa757610f9381610c6c565b835260019690960195918301918301610f82565b5096505086013592505080821115610fbd578283fd5b50610fca85828601610c88565b9150509250929050565b600060208284031215610fe5578081fd5b8135610ff08161140b565b9392505050565b600060208284031215611008578081fd5b8151610ff08161140b565b600060208284031215611024578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561105a5781518752958201959082019060010161103e565b509495945050505050565b60008151808452815b8181101561108a5760208185018101518683018201520161106e565b8181111561109b5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906110dc9083018661102b565b82810360608401526110ee818661102b565b905082810360808401526111028185611065565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061114890830184611065565b979650505050505050565b602081526000610ff0602083018461102b565b604081526000611179604083018561102b565b828103602084015261118b818561102b565b95945050505050565b602081526000610ff06020830184611065565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561129857611298611353565b5060051b60200190565b600082198211156112b5576112b561133d565b500190565b600181811c908216806112ce57607f821691505b602082108114156112ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561131b5761131b611353565b6040525050565b60006000198214156113365761133661133d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561137e57600481823e5160e01c5b90565b600060443d101561138f5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113bf57505050505090565b82850191508151818111156113d75750505050505090565b843d87010160208285010111156113f15750505050505090565b611400602082860101876112f5565b509095945050505050565b6001600160e01b03198116811461142157600080fd5b5056fea264697066735822122094c7b46a825fb05c422944e88d7bc94de08d802b0e32afdea22162c2d56d7b7c64736f6c63430008040033";
