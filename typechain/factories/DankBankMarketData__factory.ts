/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { DankBankMarketData } from "../DankBankMarketData";

export class DankBankMarketData__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DankBankMarketData> {
    return super.deploy(overrides || {}) as Promise<DankBankMarketData>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DankBankMarketData {
    return super.attach(address) as DankBankMarketData;
  }
  connect(signer: Signer): DankBankMarketData__factory {
    return super.connect(signer) as DankBankMarketData__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DankBankMarketData {
    return new Contract(address, _abi, signerOrProvider) as DankBankMarketData;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "investmentAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    name: "DankBankBuy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
    ],
    name: "DankBankSell",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountAdded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesMinted",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensRemoved",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethRemoved",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesBurnt",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ethPoolSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "virtualEthPoolSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060e58061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630f991c3814603757806324eb07f5146066575b600080fd5b605460423660046083565b60006020819052908152604090205481565b60405190815260200160405180910390f35b605460713660046083565b60016020526000908152604090205481565b6000602082840312156093578081fd5b81356001600160a01b038116811460a8578182fd5b939250505056fea26469706673582212201871818cc8309af11ce354753bc7caf92837f7d66e31ee6549f6041c4d9a275164736f6c63430008040033";
