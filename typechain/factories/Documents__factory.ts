/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Documents } from "../Documents";

export class Documents__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Documents> {
    return super.deploy(overrides || {}) as Promise<Documents>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Documents {
    return super.attach(address) as Documents;
  }
  connect(signer: Signer): Documents__factory {
    return super.connect(signer) as Documents__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Documents {
    return new Contract(address, _abi, signerOrProvider) as Documents;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "DocumentRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "DocumentUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllDocuments",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getDocument",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDocumentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getDocumentName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610584806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633d1c2273146100515780637ccb6a64146100675780639fa5f50b14610088578063c6b547e61461009d575b600080fd5b6002546040519081526020015b60405180910390f35b61007a610075366004610396565b6100bd565b60405161005e9291906104f1565b6100906101b4565b60405161005e9190610476565b6100b06100ab366004610403565b61028d565b60405161005e91906104d7565b606060008084846040516100d2929190610466565b9081526020016040518091039020600101600085856040516100f5929190610466565b90815260405190819003602001902054815467ffffffffffffffff6401000000009092049190911690829061012990610513565b80601f016020809104026020016040519081016040528092919081815260200182805461015590610513565b80156101a25780601f10610177576101008083540402835291602001916101a2565b820191906000526020600020905b81548152906001019060200180831161018557829003601f168201915b50505050509150915091509250929050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156102845783829060005260206000200180546101f790610513565b80601f016020809104026020016040519081016040528092919081815260200182805461022390610513565b80156102705780601f1061024557610100808354040283529160200191610270565b820191906000526020600020905b81548152906001019060200180831161025357829003601f168201915b5050505050815260200190600101906101d8565b50505050905090565b60025460609082106102db5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015260640160405180910390fd5b600282815481106102fc57634e487b7160e01b600052603260045260246000fd5b90600052602060002001805461031190610513565b80601f016020809104026020016040519081016040528092919081815260200182805461033d90610513565b801561038a5780601f1061035f5761010080835404028352916020019161038a565b820191906000526020600020905b81548152906001019060200180831161036d57829003601f168201915b50505050509050919050565b600080602083850312156103a8578182fd5b823567ffffffffffffffff808211156103bf578384fd5b818501915085601f8301126103d2578384fd5b8135818111156103e0578485fd5b8660208285010111156103f1578485fd5b60209290920196919550909350505050565b600060208284031215610414578081fd5b5035919050565b60008151808452815b8181101561044057602081850181015186830182015201610424565b818111156104515782602083870101525b50601f01601f19169290920160200192915050565b8183823760009101908152919050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156104ca57603f198886030184526104b885835161041b565b9450928501929085019060010161049c565b5092979650505050505050565b6020815260006104ea602083018461041b565b9392505050565b604081526000610504604083018561041b565b90508260208301529392505050565b600181811c9082168061052757607f821691505b6020821081141561054857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209ae49fa1ebce5f8538bfe53a19098991d9313eebe23e06dc003435336a9daa8464736f6c63430008040033";
